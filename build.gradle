plugins {
    id 'java'
    // Apply the application plugin
    id 'application'
}

repositories {
    mavenCentral()
}

dependencies {
    // Hibernate Core
    implementation 'org.hibernate:hibernate-core:5.6.4.Final'

    // Hibernate Entity Manager (optional, if you want to use JPA)
    implementation 'org.hibernate:hibernate-entitymanager:5.6.4.Final'

    implementation 'org.postgresql:postgresql:42.6.0'

    implementation 'io.jsonwebtoken:jjwt-api:0.11.2'

    implementation 'io.jsonwebtoken:jjwt-impl:0.11.2'

    implementation 'io.jsonwebtoken:jjwt-jackson:0.11.2'

    // JUnit 5 dependencies
    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.7.2'
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.7.2'

    // Mockito dependency
    testImplementation 'org.mockito:mockito-core:4.1.0'
    testImplementation 'org.mockito:mockito-junit-jupiter:4.1.0'
}

    // Set the main class for the application
    mainClassName = 'Main'

    // Define the JAR task
    jar {
        // Include dependencies in the JAR file
        from {
            configurations.runtimeClasspath.collect { it.isDirectory() ? it : zipTree(it) }
        }
        // Set the manifest attributes
        manifest {
            attributes 'Main-Class': mainClassName
        }
    }

    // Custom task to set the main class
    task setMainClass {
        doLast {
            sourceSets.main.java.srcDirs.each { dir ->
                fileTree(dir).matching {
                    include '**/Main.java'
                }.forEach { file ->
                    String content = file.getText('UTF-8')
                    content = content.replace('public class Main', 'public class Main implements Runnable')
                    file.write(content, 'UTF-8')
                }
            }
        }
    }
    // Set the task dependency
    jar.dependsOn setMainClass

    test {
        useJUnitPlatform()
    }
